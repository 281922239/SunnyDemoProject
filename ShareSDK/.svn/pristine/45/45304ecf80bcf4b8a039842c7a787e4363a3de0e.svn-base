package com.het.share.dialog;

import android.content.Context;
import android.graphics.drawable.Drawable;
import android.support.annotation.DrawableRes;
import android.support.annotation.NonNull;
import android.support.annotation.Nullable;
import android.support.annotation.StringRes;
import android.support.v4.view.ViewPager;
import android.util.Log;
import android.view.Gravity;
import android.view.LayoutInflater;
import android.view.MotionEvent;
import android.view.View;
import android.view.ViewGroup;
import android.view.Window;
import android.widget.Button;
import android.widget.GridView;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.LinearLayout.LayoutParams;
import android.widget.RelativeLayout;
import android.widget.TextView;

import com.het.share.R;
import com.het.share.adapter.CommoShareViewAdapter;
import com.het.share.adapter.CommonShareGridViewAdapter;
import com.het.share.listener.ICommonShareLinstener;
import com.het.share.manager.CommonSharePlatform;
import com.het.share.model.CommonShareItemModel;
import com.het.share.widget.CircleFlowIndicator;
import com.het.share.widget.CommonShareView;
import com.het.share.widget.CommonShareViewpager;
import com.het.share.widget.ViewFlow;
import com.sina.weibo.sdk.utils.LogUtil;
import com.tencent.mm.sdk.modelbase.BaseResp;

import java.util.ArrayList;
import java.util.List;

public class CommonShareDialog extends CommonShareBaseLoadingDialog implements android.view.View.OnClickListener {

    public static final String TAG = "SelectPhotoDialog";
    private static final int pageItemCount = 8;//一页的item数
    private int pageCounts = 1;//总页数
    private Context mContext;

    private static ICommonShareLinstener listener;
    private static CommonSharePlatform mSharePlatform;
    private List<GridView> shareViewList = new ArrayList<>();
    private List<CommonShareItemModel> shareItemModels = new ArrayList<>();
    private CommoShareViewAdapter mShareViewAdapter;
    private CommonShareGridViewAdapter mShareGridViewAdapter;

    private ViewFlow shareViewPager;
    private CircleFlowIndicator mFlowIndicator;

    public static ICommonShareLinstener getListener(){
        return listener;
    }
    /**
     * 简单分享弹出框
     *
     * @param context  上下文
     * @param listener 分享监听
     */
    public CommonShareDialog(Context context, ICommonShareLinstener listener) {
        super(context, R.style.MyDialogStyleBottom);
        this.listener = listener;
        initUI(context, null);
    }


    /**
     * 自定义弹窗的style
     *
     * @param context  上下文
     * @param style    自定义样式
     * @param listener 分享监听
     */
    public CommonShareDialog(Context context, int style, ICommonShareLinstener listener) {
        super(context, style);
        this.listener = listener;
        initUI(context, null);
    }

    /**
     * 自定义布局的弹窗
     *
     * @param context     上下文
     * @param contentView 自定义布局
     * @param listener    分享监听
     */
    public CommonShareDialog(Context context, View contentView, ICommonShareLinstener listener) {
        super(context, R.style.MyDialogStyleBottom);
        this.listener = listener;
        initUI(context, contentView);
    }

    /**
     * 自定义样式，布局的弹窗
     *
     * @param context     上下文
     * @param style       自定义样式
     * @param contentView 自定义布局
     * @param listener    分享监听
     */
    public CommonShareDialog(Context context, int style, View contentView, ICommonShareLinstener listener) {
        super(context, style);
        this.listener = listener;
        initUI(context, contentView);
    }

    private void initUI(Context context, View contentView) {
        shareViewList.clear();
        mContext = context;
        View dlgView = LayoutInflater.from(mContext).inflate(R.layout.common_vertical_dialog_layout, null);
        LinearLayout mContainer = (LinearLayout) dlgView.findViewById(R.id.common_dialog_content_container);
        setContentView(dlgView);
        setCanceledOnTouchOutside(true);
        Window window = getWindow();
        window.setWindowAnimations(R.style.AnimBottom); // 设置显示动画
        window.setGravity(Gravity.BOTTOM); // 设置显示位置
        window.setLayout(LayoutParams.MATCH_PARENT, LayoutParams.WRAP_CONTENT); // 设置布局大小

        if (contentView == null) {
            //如果上层没有传内容View进来，则使用默认的
            View view = LayoutInflater.from(mContext).inflate(
                    R.layout.share_dialog2, null);
            Button mBtnCancelShare = (Button) view.findViewById(R.id.cancel_share);
            mBtnCancelShare.setOnClickListener(this);
            shareViewPager = (ViewFlow) view.findViewById(R.id.share_viewpager);
            mFlowIndicator = (CircleFlowIndicator) view.findViewById(R.id.share_flow_indicator);
            shareViewPager.setFlowIndicator(mFlowIndicator);

            addShareViews();
            mContainer.addView(view, new LayoutParams(ViewGroup.LayoutParams.MATCH_PARENT, ViewGroup.LayoutParams.WRAP_CONTENT));
        } else {
            mContainer.addView(contentView, new LayoutParams(ViewGroup.LayoutParams.MATCH_PARENT, ViewGroup.LayoutParams.WRAP_CONTENT));
        }

    }

    /**
     * 添加分享平台
     */
    private void addShareViews() {
        addShareView(mContext.getResources().getDrawable(R.drawable.logo_wechatmoments),
                mContext.getResources().getString(R.string.share_plat_wechatmoments), new View.OnClickListener() {
                    @Override
                    public void onClick(View v) {
                        listener.onStartShare(CommonSharePlatform.WeixinFriendCircle);
                    }
                });
        addShareView(mContext.getResources().getDrawable(R.drawable.logo_wechat),
                mContext.getResources().getString(R.string.share_plat_wechat), new View.OnClickListener() {
                    @Override
                    public void onClick(View v) {
                        listener.onStartShare(CommonSharePlatform.WeixinFriend);
                    }
                });
        addShareView(mContext.getResources().getDrawable(R.drawable.logo_qzone),
                mContext.getResources().getString(R.string.share_plat_qqzone), new View.OnClickListener() {
                    @Override
                    public void onClick(View v) {
                        listener.onStartShare(CommonSharePlatform.QQ_Zone);
                    }
                });
        addShareView(mContext.getResources().getDrawable(R.drawable.logo_qq),
                mContext.getResources().getString(R.string.share_plat_qq), new View.OnClickListener() {
                    @Override
                    public void onClick(View v) {
                        listener.onStartShare(CommonSharePlatform.QQ_Friend);
                    }
                });

       // initGridView();
    }

    @Override
    public void show() {

        //  initGridView();
        super.show();
    }

    @Override
    public void dismiss() {
        super.dismiss();
    }

    /**
     * 根据item数目，生成相应的gridView
     */
    private void initGridView() {

        mShareViewAdapter = new CommoShareViewAdapter(mContext, shareItemModels);
        shareViewPager.setAdapter(mShareViewAdapter);
        mShareViewAdapter.notifyDataSetChanged();
        if(shareItemModels.size() <=8){
            mFlowIndicator.setVisibility(View.GONE);
        }else{
            mFlowIndicator.setVisibility(View.VISIBLE);
        }

    }

    /**
     * 动态添加分享图标
     *
     * @param shareDrawable
     * @param shareText
     */
    public void addShareView(@NonNull Drawable shareDrawable,
                             @NonNull String shareText,
                             @Nullable View.OnClickListener onClickListener) {

        CommonShareItemModel itemModel = new CommonShareItemModel();
        itemModel.setmShareDrawable(shareDrawable);
        itemModel.setmShareTitle(shareText);
        itemModel.setOnClick(onClickListener);

        shareItemModels.add(itemModel);
        if (mShareViewAdapter != null) {
            mShareViewAdapter.notifyDataSetChanged();
        }

        initGridView();
    }

    @Override
    public boolean onTouchEvent(MotionEvent event) {
        switch (event.getAction()) {
            case MotionEvent.ACTION_DOWN:
                dismiss();
                break;
            default:
                break;
        }
        return super.onTouchEvent(event);
    }

    @Override
    public void onClick(View arg0) {
        if (arg0.getId() == R.id.wechatmomentsRe) {
            mSharePlatform = CommonSharePlatform.WeixinFriendCircle;
            listener.onStartShare(CommonSharePlatform.WeixinFriendCircle);

        } else if (arg0.getId() == R.id.wechatRe) {
            mSharePlatform = CommonSharePlatform.WeixinFriend;
            listener.onStartShare(CommonSharePlatform.WeixinFriend);

        } else if (arg0.getId() == R.id.qqRe) {
            mSharePlatform = CommonSharePlatform.QQ_Friend;
            listener.onStartShare(CommonSharePlatform.QQ_Friend);

        } else if (arg0.getId() == R.id.qqzoneRe) {
            mSharePlatform = CommonSharePlatform.QQ_Zone;
            listener.onStartShare(CommonSharePlatform.QQ_Zone);

        } else if (arg0.getId() == R.id.cancel_share) {
            this.dismiss();
        }
    }

    /**
     * 微信回调
     * @param resp
     */
    public static void onResp(BaseResp resp){

        ICommonShareLinstener shareLinstener = getListener();
        int code = resp.errCode;
        if(code == BaseResp.ErrCode.ERR_OK){
            shareLinstener.onShareSuccess(mSharePlatform,"发送成功");
        }else if(code == BaseResp.ErrCode.ERR_USER_CANCEL){
            shareLinstener.onShareCancel(mSharePlatform);
        }else if(code == BaseResp.ErrCode.ERR_AUTH_DENIED){
            shareLinstener.onShareFialure(mSharePlatform,"发送被拒绝");
        }else {
            shareLinstener.onShareFialure(mSharePlatform,"发送返回");
        }
    }

}
